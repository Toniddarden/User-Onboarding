{"ast":null,"code":"import _slicedToArray from \"/Users/tonidarden/github/git/User-Onboarding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tonidarden/github/git/User-Onboarding/src/components/UserForms.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field, validationSchema } from \"formik\";\nimport * as Yup from \"yup\";\nimport Axios from \"axios\";\n\nconst UserForms = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  useEffect(() => {\n    if (props.status) {\n      setUser([...user, props.status]);\n    }\n  }, [props.status]); //form layout\n\n  return React.createElement(\"div\", {\n    className: \"user-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" \", \"On Boarding Form\", React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), props.touched.name && props.errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.errors.name), React.createElement(Field, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), props.touched.email && props.errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.errors.email), React.createElement(Field, {\n    type: \"text\",\n    name: \"password\",\n    placeholder: \"New Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), props.touched.password && props.errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.errors.password), React.createElement(Field, {\n    component: \"select\",\n    name: \"region\",\n    className: \"sumbit-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Select Region\"), React.createElement(\"option\", {\n    value: \"eastcoast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"East Coast\"), React.createElement(\"option\", {\n    value: \"westcoast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"West Coast\"), React.createElement(\"option\", {\n    value: \"midwest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Mid-West\"), React.createElement(\"option\", {\n    value: \"south\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"South\")), React.createElement(\"label\", {\n    className: \"checkbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    checked: props.values.terms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \"Terms of Service\", React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Field, {\n    component: \"textarea\",\n    type: \"text\",\n    name: \"medical\",\n    placeholder: \"Add any medical conditions\",\n    checked: props.values.medical,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Submit!\")), user.map(user => React.createElement(\"ul\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Name: \", user.name), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Email: \", user.email), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"New Password: \", user.password))));\n}; // a component is a function that takes a prop param\n// and returns JSX\n// a HOC is a function that takes a component function as a param\n// and returns a new component function\n\n\nconst mappingProps = props => {\n  console.log(props);\n  const userObjects = {\n    name: props.name || \"\",\n    email: props.email || \"\",\n    password: props.password || \"\",\n    terms: props.terms || true,\n    medical: props.medical || \"\"\n  };\n  return userObjects;\n};\n\nconst handleSubmit = (values, {\n  setStatus\n}) => {\n  console.log(\"submit test\");\n  Axios.post(\"https://reqres.in/api/users/\", values).then(res => {\n    console.log(res);\n    setStatus(res.data);\n  }).catch(err => console.log(err));\n};\n\nlet yupSchema = Yup.object().shape({\n  name: Yup.string().requried(\"Please enter your name\"),\n  email: Yup.string().requried(\"Please enter your email\"),\n  password: Yup.string().requried(\"Please enter your password\")\n});\nconst formikObj = {\n  mappedProps: mappingProps,\n  handledSubmit: handleSubmit,\n  validationSchema: yupSchema\n};\nconst FinalFormHOC = withFormik(formikObj);\nconst FinalUserForm = FinalFormHOC(UserForms);\nexport default FinalUserForm;","map":{"version":3,"sources":["/Users/tonidarden/github/git/User-Onboarding/src/components/UserForms.js"],"names":["React","useState","useEffect","withFormik","Form","Field","validationSchema","Yup","Axios","UserForms","props","user","setUser","status","touched","name","errors","email","password","values","terms","medical","map","id","mappingProps","console","log","userObjects","handleSubmit","setStatus","post","then","res","data","catch","err","yupSchema","object","shape","string","requried","formikObj","mappedProps","handledSubmit","FinalFormHOC","FinalUserForm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field, validationSchema } from \"formik\";\nimport * as Yup from \"yup\";\nimport Axios from \"axios\";\n\nconst UserForms = props => {\n  const [user, setUser] = useState([]);\n\n  useEffect(() => {\n    if (props.status) {\n      setUser([...user, props.status]);\n    }\n  }, [props.status]);\n\n  //form layout\n\n  return (\n    <div className=\"user-form\">\n      <Form>\n        {\" \"}\n        On Boarding Form\n        <Field type=\"text\" name=\"name\" placeholder=\"Name\" />\n        {props.touched.name && props.errors.name && (\n          <p className=\"error\">{props.errors.name}</p>\n        )}\n        <Field type=\"text\" name=\"email\" placeholder=\"Email Address\" />\n        {props.touched.email && props.errors.email && (\n          <p className=\"error\">{props.errors.email}</p>\n        )}\n        <Field type=\"text\" name=\"password\" placeholder=\"New Password\" />\n        {props.touched.password && props.errors.password && (\n          <p className=\"error\">{props.errors.password}</p>\n        )}\n        <Field component=\"select\" name=\"region\" className=\"sumbit-select\">\n          <option>Select Region</option>\n          <option value=\"eastcoast\">East Coast</option>\n          <option value=\"westcoast\">West Coast</option>\n          <option value=\"midwest\">Mid-West</option>\n          <option value=\"south\">South</option>\n        </Field>\n        <label className=\"checkbox-container\">\n          <Field type=\"checkbox\" name=\"terms\" checked={props.values.terms} />\n          Terms of Service\n          <span className=\"checkmark\" />\n        </label>\n        <Field\n          component=\"textarea\"\n          type=\"text\"\n          name=\"medical\"\n          placeholder=\"Add any medical conditions\"\n          checked={props.values.medical}\n        />\n        <button type=\"submit\">Submit!</button>\n      </Form>\n      {user.map(user => (\n        <ul key={user.id}>\n          <li>Name: {user.name}</li>\n          <li>Email: {user.email}</li>\n          <li>New Password: {user.password}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\n// a component is a function that takes a prop param\n// and returns JSX\n\n// a HOC is a function that takes a component function as a param\n// and returns a new component function\n\nconst mappingProps = props => {\n  console.log(props);\n  const userObjects = {\n    name: props.name || \"\",\n    email: props.email || \"\",\n    password: props.password || \"\",\n    terms: props.terms || true,\n    medical: props.medical || \"\"\n  };\n  return userObjects;\n};\n\nconst handleSubmit = (values, { setStatus }) => {\n  console.log(\"submit test\");\n  Axios.post(\"https://reqres.in/api/users/\", values)\n    .then(res => {\n      console.log(res);\n      setStatus(res.data);\n    })\n    .catch(err => console.log(err));\n};\n\nlet yupSchema = Yup.object().shape({\n  name: Yup.string().requried(\"Please enter your name\"),\n  email: Yup.string().requried(\"Please enter your email\"),\n  password: Yup.string().requried(\"Please enter your password\")\n});\n\nconst formikObj = {\n  mappedProps: mappingProps,\n  handledSubmit: handleSubmit,\n  validationSchema: yupSchema\n};\n\nconst FinalFormHOC = withFormik(formikObj);\nconst FinalUserForm = FinalFormHOC(UserForms);\n\nexport default FinalUserForm;\n"]},"metadata":{},"sourceType":"module"}